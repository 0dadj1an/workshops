- name: ensure workshop folder {{ec2_name_prefix}} exists
  file:
    path: "{{ playbook_dir }}/{{ec2_name_prefix}}"
    state: directory

- name: provision aws resources
  include_tasks: resources.yml

- name: provision networking aws resources
  include_tasks: resources_networking.yml
  vars:
    ec2_lab_node_types_networking: all_cisco
  when:
    - networking is defined
    - networking

- name: find ami for ansible control node
  ec2_ami_facts:
    region: "{{ ec2_region }}"
    owners: "{{ ec2_instance_types[ansible_node].owners }}"
    filters:
      name: "{{ ec2_instance_types[ansible_node].filter }}"
      architecture: "{{ ec2_instance_types[ansible_node].architecture }}"
  register: amis

- name: save ami for ansible control node
  set_fact:
    ansible_control_node_ami: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: Create EC2 instances for ansible node (control node)
  ec2:
    assign_public_ip: yes
    key_name: "{{ ec2_name_prefix }}-key"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_instance_types[ansible_node].size }}"
    image: "{{ ansible_control_node_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    count_tag:
      Workshop_ansible: "{{ec2_name_prefix}}-ansible"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_instance_types[ansible_node].disk_space }}"
        delete_on_termination: true
  register: control_output

- name: Ensure tags are present
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{item.1}}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item.0 + 1}}-ansible"
      Workshop_ansible: "{{ec2_name_prefix}}-ansible"
      Workshop: "{{ec2_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      Username: "{{ linklight_user }}"
      Info: "Username that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
  with_indexed_items:
    - "{{ control_output.instance_ids }}"
  when: control_output.instance_ids is not none

- name: provision ansible engine (essentials) instances
  include_tasks: instances_engine.yml
  when:
    - networking is undefined
    - not networking

- name: provision ansible networking instances
  include_tasks: instances_networking.yml
  when:
    - networking is defined
    - networking
